{
  "_args": [
    [
      "sequelize",
      "/home/ubuntu/Server"
    ]
  ],
  "_from": "sequelize@latest",
  "_hasShrinkwrap": false,
  "_id": "sequelize@6.6.5",
  "_inCache": true,
  "_installable": true,
  "_location": "/sequelize",
  "_nodeVersion": "12.22.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sequelize_6.6.5_1625580926596_0.8087930137116803"
  },
  "_npmUser": {
    "email": "papb1996@gmail.com",
    "name": "papb"
  },
  "_npmVersion": "7.19.1",
  "_phantomChildren": {
    "lru-cache": "6.0.0"
  },
  "_requested": {
    "name": "sequelize",
    "raw": "sequelize",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sequelize/-/sequelize-6.6.5.tgz",
  "_shasum": "6f618e99f3df1fc81f28709e8a3139cec3ef1f0c",
  "_shrinkwrap": null,
  "_spec": "sequelize",
  "_where": "/home/ubuntu/Server",
  "bugs": {
    "url": "https://github.com/sequelize/sequelize/issues"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-angular"
    ],
    "rules": {
      "type-enum": [
        2,
        "always",
        [
          "build",
          "ci",
          "docs",
          "feat",
          "fix",
          "perf",
          "refactor",
          "revert",
          "style",
          "test",
          "meta"
        ]
      ]
    }
  },
  "dependencies": {
    "debug": "^4.1.1",
    "dottie": "^2.0.0",
    "inflection": "1.13.1",
    "lodash": "^4.17.20",
    "moment": "^2.26.0",
    "moment-timezone": "^0.5.31",
    "retry-as-promised": "^3.2.0",
    "semver": "^7.3.2",
    "sequelize-pool": "^6.0.0",
    "toposort-class": "^1.0.1",
    "uuid": "^8.1.0",
    "validator": "^13.6.0",
    "wkx": "^0.5.0"
  },
  "description": "Multi dialect ORM for Node.JS",
  "devDependencies": {
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-angular": "^11.0.0",
    "@types/node": "^12.12.42",
    "@types/validator": "^13.1.4",
    "acorn": "^8.0.4",
    "chai": "^4.x",
    "chai-as-promised": "^7.x",
    "chai-datetime": "^1.6.0",
    "cheerio": "^1.0.0-rc.3",
    "cls-hooked": "^4.2.2",
    "cross-env": "^7.0.2",
    "delay": "^4.3.0",
    "esdoc": "^1.1.0",
    "esdoc-ecmascript-proposal-plugin": "^1.0.0",
    "esdoc-inject-style-plugin": "^1.0.0",
    "esdoc-standard-plugin": "^1.0.0",
    "eslint": "^6.8.0",
    "eslint-plugin-jsdoc": "^20.4.0",
    "eslint-plugin-mocha": "^6.2.2",
    "expect-type": "^0.11.0",
    "fs-jetpack": "^4.1.0",
    "husky": "^4.2.5",
    "js-combinatorics": "^0.5.5",
    "lcov-result-merger": "^3.0.0",
    "lint-staged": "^10.2.6",
    "mariadb": "^2.3.1",
    "markdownlint-cli": "^0.26.0",
    "marked": "^1.1.0",
    "mocha": "^7.1.2",
    "mysql2": "^2.1.0",
    "nyc": "^15.0.0",
    "p-map": "^4.0.0",
    "p-props": "^4.0.0",
    "p-settle": "^4.1.1",
    "p-timeout": "^4.0.0",
    "pg": "^8.2.1",
    "pg-hstore": "^2.x",
    "rimraf": "^3.0.2",
    "semantic-release": "^17.3.0",
    "semantic-release-fail-on-major-bump": "^1.0.0",
    "sinon": "^9.0.2",
    "sinon-chai": "^3.3.0",
    "sqlite3": "^4.2.0",
    "tedious": "8.3.0",
    "typescript": "^4.1.3"
  },
  "directories": {},
  "dist": {
    "fileCount": 125,
    "integrity": "sha512-QyRrJrDRiwuiILqTMHUA1yWOPIL12KlfmgZ3hnzQwbMvp2vJ6fzu9bYJQB+qPMosck4mBUggY4Cjoc6Et8FBIQ==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg5GV/CRA9TVsSAnZWagAAzz8P+wREZSKafk6eKFY6FEnV\n/DvTsTy0QlAugcH0EAbbG+ohxvVGWQRYK3pKYma99gad2ycRCmK1yIXwaX3p\nnjzqa0BaIIMCfjOCr1N+6iv/36psnoZYgoJp6LrMkTnBz/9DTPc9afY94K9t\n+gNxCODCD2CkF1sfp9Xnac2IIEs+fZL0gbU0lDxr9sVa34pmRZ5Vo5Pvnqxj\nmJ95n9FFmR9LMMAUsHjlhfroasLPzbARcal8JzCJkO4aE4VO/ONwR0dYSKyp\nS7AKRhKK72Vy9drEdPEOVz4WErjW8kzoxnIBvsvc+5nukyhuyWFI+TLA+Ckb\nCfRexhmFi6444SQraWxA31NFEYO0N5K1NR1AFXKtU7aDskm3ZaX31ya54uzb\nX8ouVMAalXktJBQBTZK8WDEzVjkMWW8tQ4rO/FAbOnKRxqB+pT2LajBJA/fM\nR1x7cBU13ze3daTIwPH/6w3c+NQx79GE3ZuwNZzekjR+Z5xDmnFYm7pelQR9\nElZJ30aLKATRKZPQE00pv9k7dN7EsOzGt983xlRfNsFvT5MNiSUZcFk8VoQ6\nezPdhYB+I8bhwmYj3igmLlHw93fiEAcrlP6pmEAcaHP0vMbuove+8TPQIDsN\nQ47CuwF0Az+Y3vApltpkZozB4TewK9zuQATfr2USEzJAYlgbMxD8qGnKEjaK\na8eB\r\n=cCGJ\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "6f618e99f3df1fc81f28709e8a3139cec3ef1f0c",
    "tarball": "https://registry.npmjs.org/sequelize/-/sequelize-6.6.5.tgz",
    "unpackedSize": 1150478
  },
  "engines": {
    "node": ">=10.0.0"
  },
  "gitHead": "56bb1d6ef9827f604d7bcef945abb7e213f2322d",
  "homepage": "https://sequelize.org/",
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  },
  "keywords": [
    "database",
    "db",
    "mariadb",
    "mssql",
    "mysql",
    "nodejs",
    "object relational mapper",
    "orm",
    "pg",
    "postgres",
    "postgresql",
    "sql",
    "sqlite",
    "sqlserver"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": "eslint"
  },
  "main": "index.js",
  "maintainers": [
    {
      "name": "janaameier",
      "email": "janzeh@gmail.com"
    },
    {
      "name": "durango",
      "email": "me@danieldurante.com"
    },
    {
      "name": "mickhansen",
      "email": "mick.kasper.hansen@gmail.com"
    },
    {
      "name": "sdepold",
      "email": "sascha@depold.com"
    },
    {
      "name": "felixfbecker",
      "email": "felix.b@outlook.com"
    },
    {
      "name": "sushantdhiman",
      "email": "sushantdhiman@outlook.com"
    },
    {
      "name": "eseliger",
      "email": "erikseliger@me.com"
    },
    {
      "name": "papb",
      "email": "papb1996@gmail.com"
    }
  ],
  "name": "sequelize",
  "optionalDependencies": {},
  "peerDependenciesMeta": {
    "mariadb": {
      "optional": true
    },
    "mysql2": {
      "optional": true
    },
    "pg": {
      "optional": true
    },
    "pg-hstore": {
      "optional": true
    },
    "sqlite3": {
      "optional": true
    },
    "tedious": {
      "optional": true
    }
  },
  "publishConfig": {
    "tag": "latest"
  },
  "readme": "ERROR: No README data found!",
  "release": {
    "branches": [
      "v6"
    ],
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/github",
      "@semantic-release/npm",
      "@semantic-release/release-notes-generator",
      "semantic-release-fail-on-major-bump"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sequelize/sequelize.git"
  },
  "scripts": {
    "----------------------------------------- coverage ------------------------------------------------": "",
    "----------------------------------------- development ---------------------------------------------": "",
    "----------------------------------------- documentation -------------------------------------------": "",
    "----------------------------------------- local test dbs ------------------------------------------": "",
    "----------------------------------------- local tests ---------------------------------------------": "",
    "----------------------------------------- static analysis -----------------------------------------": "",
    "----------------------------------------- tests ---------------------------------------------------": "",
    "---------------------------------------------------------------------------------------------------": "",
    "cover": "rimraf coverage && npm run teaser && npm run cover-integration && npm run cover-unit && npm run merge-coverage",
    "cover-integration": "cross-env COVERAGE=true nyc --reporter=lcovonly mocha \"test/integration/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/integration.info')\"",
    "cover-unit": "cross-env COVERAGE=true nyc --reporter=lcovonly mocha \"test/unit/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/unit.info')\"",
    "docs": "rimraf esdoc && esdoc -c docs/esdoc-config.js && cp docs/favicon.ico esdoc/favicon.ico && cp docs/ROUTER.txt esdoc/ROUTER && node docs/run-docs-transforms.js && node docs/redirects/create-redirects.js && rimraf esdoc/file esdoc/source.html",
    "lint": "eslint lib test --quiet",
    "lint-docs": "markdownlint docs",
    "merge-coverage": "lcov-result-merger \"coverage/*.info\" \"coverage/lcov.info\"",
    "restart-mariadb": "npm run start-mariadb",
    "restart-mssql": "npm run start-mssql",
    "restart-mysql": "npm run start-mysql",
    "restart-postgres": "npm run start-postgres",
    "sscce": "node sscce.js",
    "sscce-mariadb": "cross-env DIALECT=mariadb node sscce.js",
    "sscce-mssql": "cross-env DIALECT=mssql node sscce.js",
    "sscce-mysql": "cross-env DIALECT=mysql node sscce.js",
    "sscce-postgres": "cross-env DIALECT=postgres node sscce.js",
    "sscce-postgres-native": "cross-env DIALECT=postgres-native node sscce.js",
    "sscce-sqlite": "cross-env DIALECT=sqlite node sscce.js",
    "start-mariadb": "bash dev/mariadb/10.3/start.sh",
    "start-mssql": "bash dev/mssql/2019/start.sh",
    "start-mysql": "bash dev/mysql/5.7/start.sh",
    "start-postgres": "bash dev/postgres/10/start.sh",
    "stop-mariadb": "bash dev/mariadb/10.3/stop.sh",
    "stop-mssql": "bash dev/mssql/2019/stop.sh",
    "stop-mysql": "bash dev/mysql/5.7/stop.sh",
    "stop-postgres": "bash dev/postgres/10/stop.sh",
    "teaser": "node test/teaser.js",
    "test": "npm run teaser && npm run test-unit && npm run test-integration",
    "test-integration": "mocha \"test/integration/**/*.test.js\"",
    "test-integration-mariadb": "cross-env DIALECT=mariadb npm run test-integration",
    "test-integration-mssql": "cross-env DIALECT=mssql npm run test-integration",
    "test-integration-mysql": "cross-env DIALECT=mysql npm run test-integration",
    "test-integration-postgres": "cross-env DIALECT=postgres npm run test-integration",
    "test-integration-postgres-native": "cross-env DIALECT=postgres-native npm run test-integration",
    "test-integration-sqlite": "cross-env DIALECT=sqlite npm run test-integration",
    "test-mariadb": "cross-env DIALECT=mariadb npm test",
    "test-mssql": "cross-env DIALECT=mssql npm test",
    "test-mysql": "cross-env DIALECT=mysql npm test",
    "test-postgres": "cross-env DIALECT=postgres npm test",
    "test-postgres-native": "cross-env DIALECT=postgres-native npm test",
    "test-sqlite": "cross-env DIALECT=sqlite npm test",
    "test-typings": "tsc -b types/tsconfig.json && tsc -b types/test/tsconfig.json",
    "test-unit": "mocha \"test/unit/**/*.test.js\"",
    "test-unit-mariadb": "cross-env DIALECT=mariadb npm run test-unit",
    "test-unit-mssql": "cross-env DIALECT=mssql npm run test-unit",
    "test-unit-mysql": "cross-env DIALECT=mysql npm run test-unit",
    "test-unit-postgres": "cross-env DIALECT=postgres npm run test-unit",
    "test-unit-postgres-native": "cross-env DIALECT=postgres-native npm run test-unit",
    "test-unit-sqlite": "cross-env DIALECT=sqlite npm run test-unit"
  },
  "types": "types",
  "version": "6.6.5"
}
